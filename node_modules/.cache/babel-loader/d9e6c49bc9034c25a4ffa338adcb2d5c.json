{"ast":null,"code":"// import React from 'react';\n// import {Navigate, Outlet} from 'react-router-dom'\n// const useAuth=()=>{\n//     return true\n// }\n// // @ts-ignore\n// const  PrivateRoute=({component }) =>{\n//   const auth=useAuth()\n//   return auth? component : <Navigate to=\"/login\"/>\n// }\n// export default PrivateRoute;\nfunction ProtectedRoute(_ref) {\n  let {\n    component: Component,\n    ...restOfProps\n  } = _ref;\n  const isAuthenticated = localStorage.getItem(\"isAuthenticated\");\n  console.log(\"this\", isAuthenticated);\n  return co;\n}\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["ProtectedRoute","component","Component","restOfProps","isAuthenticated","localStorage","getItem","console","log","co"],"sources":["/Users/tetianastupak/keycloak-react/src/component/PrivateRoute.tsx"],"sourcesContent":["// import React from 'react';\n\n// import {Navigate, Outlet} from 'react-router-dom'\n\n// const useAuth=()=>{\n//     return true\n// }\n// // @ts-ignore\n// const  PrivateRoute=({component }) =>{\n\n//   const auth=useAuth()\n\n\n//   return auth? component : <Navigate to=\"/login\"/>\n// }\n\n// export default PrivateRoute;\n\nimport React from \"react\";\nimport { Navigate,  Route } from \"react-router-dom\";\n\nfunction ProtectedRoute({ component: Component, ...restOfProps }) {\n  const isAuthenticated = localStorage.getItem(\"isAuthenticated\");\n  console.log(\"this\", isAuthenticated);\n\n  return co\n}\n\nexport default ProtectedRoute;"],"mappings":"AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAKA,SAASA,cAAT,OAAkE;EAAA,IAA1C;IAAEC,SAAS,EAAEC,SAAb;IAAwB,GAAGC;EAA3B,CAA0C;EAChE,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAxB;EACAC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,eAApB;EAEA,OAAOK,EAAP;AACD;;KALQT,c;AAOT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}