{"ast":null,"code":"var _jsxFileName = \"/Users/tetianastupak/keycloak-react/src/component/PrivateRoute.tsx\";\n// import React from 'react';\n// import {Navigate, Outlet} from 'react-router-dom'\n// const useAuth=()=>{\n//     return true\n// }\n// // @ts-ignore\n// const  PrivateRoute=({component }) =>{\n//   const auth=useAuth()\n//   return auth? component : <Navigate to=\"/login\"/>\n// }\n// export default PrivateRoute;\n// import React from \"react\";\n// // @ts-ignore\n// const PrivateRoute = ({ component, ...restOfProps }) => {\n//   const isAuthenticated = localStorage.getItem(\"isAuthenticated\");\n//   console.log(\"this\", isAuthenticated);\n//   return component\n// }\n// export default PrivateRoute;\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    redirectTo,\n    isAuth,\n    path,\n    ...props\n  } = _ref;\n\n  if (!isAuth) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: redirectTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 40\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Navigate","PrivateRoute","component","Component","redirectTo","isAuth","path","props"],"sources":["/Users/tetianastupak/keycloak-react/src/component/PrivateRoute.tsx"],"sourcesContent":["// import React from 'react';\n\n// import {Navigate, Outlet} from 'react-router-dom'\n\n// const useAuth=()=>{\n//     return true\n// }\n// // @ts-ignore\n// const  PrivateRoute=({component }) =>{\n\n//   const auth=useAuth()\n\n\n//   return auth? component : <Navigate to=\"/login\"/>\n// }\n\n// export default PrivateRoute;\n\n// import React from \"react\";\n// // @ts-ignore\n// const PrivateRoute = ({ component, ...restOfProps }) => {\n//   const isAuthenticated = localStorage.getItem(\"isAuthenticated\");\n//   console.log(\"this\", isAuthenticated);\n\n//   return component\n// }\n\n// export default PrivateRoute;\n\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, redirectTo, isAuth, path, ...props }) => {\n    if(!isAuth) {\n        return <Navigate to={redirectTo} />;\n    }\n    return <Route path={path} element={<Component />} />\n};\n\nexport default PrivateRoute;"],"mappings":";AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,MAAMC,YAAY,GAAG,QAAkE;EAAA,IAAjE;IAAEC,SAAS,EAAEC,SAAb;IAAwBC,UAAxB;IAAoCC,MAApC;IAA4CC,IAA5C;IAAkD,GAAGC;EAArD,CAAiE;;EACnF,IAAG,CAACF,MAAJ,EAAY;IACR,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAED;IAAd;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACD,oBAAO,QAAC,KAAD;IAAO,IAAI,EAAEE,IAAb;IAAmB,OAAO,eAAE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA;EAA5B;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CALD;;KAAML,Y;AAON,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}