{"ast":null,"code":"var _jsxFileName = \"/Users/tetianastupak/keycloak-react/src/component/PrivateRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useAuth = () => {\n  const user = localStorage.getItem('user');\n\n  if (user) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst PrivateRoute = props => {\n  _s();\n\n  const auth = useAuth();\n  return auth ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 15\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 26\n  }, this);\n};\n\n_s(PrivateRoute, \"YuJWYXaKIY31b1y7U6yy3IXSxQA=\", false, function () {\n  return [useAuth];\n});\n\n_c = PrivateRoute;\nexport default ProtectedRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useAuth","user","localStorage","getItem","PrivateRoute","props","auth","ProtectedRoutes"],"sources":["/Users/tetianastupak/keycloak-react/src/component/PrivateRoute.tsx"],"sourcesContent":["import React from 'react';\n\nimport {Navigate, Outlet} from 'react-router-dom'\n\nconst useAuth=()=>{\n  const user=localStorage.getItem('user')\n  if(user){\n    return true\n  } else {\n    return false\n  }\n}\n\nconst  PrivateRoute=(props:any) =>{\n\n  const auth=useAuth()\n\n  return auth?<Outlet/>: <Navigate to=\"/login\"/>\n}\n\nexport default ProtectedRoutes;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,QAAR,EAAkBC,MAAlB,QAA+B,kBAA/B;;;AAEA,MAAMC,OAAO,GAAC,MAAI;EAChB,MAAMC,IAAI,GAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;;EACA,IAAGF,IAAH,EAAQ;IACN,OAAO,IAAP;EACD,CAFD,MAEO;IACL,OAAO,KAAP;EACD;AACF,CAPD;;AASA,MAAOG,YAAY,GAAEC,KAAD,IAAc;EAAA;;EAEhC,MAAMC,IAAI,GAACN,OAAO,EAAlB;EAEA,OAAOM,IAAI,gBAAC,QAAC,MAAD;IAAA;IAAA;IAAA;EAAA,QAAD,gBAAY,QAAC,QAAD;IAAU,EAAE,EAAC;EAAb;IAAA;IAAA;IAAA;EAAA,QAAvB;AACD,CALD;;GAAOF,Y;UAEMJ,O;;;KAFNI,Y;AAOP,eAAeG,eAAf"},"metadata":{},"sourceType":"module"}